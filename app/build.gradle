import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")
    flavorDimensions "androiddemo1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //引入其他so位置
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            res.srcDirs=[
                    'src/main/res/layouts/function1-10',
                    'src/main/res/layouts/function11-20',
                    'src/main/res/layouts/function21-30',
                    'src/main/res/layouts/function31-40',
                    'src/main/res/layouts/function41-50',
                    'src/main/res/layouts/ui1-10',
                    'src/main/res/layouts/ui11-20',
                    'src/main/res/layouts/ui21-30',
                    'src/main/res/layouts/ui31-40',
                    'src/main/res/layouts/ui41-50',
                    'src/main/res/layouts/view',
                    'src/main/res'
            ]
        }
    }

    //make文件位置
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        //声明so文件夹支持的平台
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }

        //声明cpp生成的平台
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }

    signingConfigs {
        releaseConfig {
            storeFile file('../buildsystem/myAppKey.jks')
            storePassword 'jixiao'
            keyAlias 'com.jx.androiddemo'
            keyPassword 'jixiao'
        }
        //mediasession
        /*releaseConfig {
            storeFile file('../buildsystem/platform.jks')
            storePassword 'HSAEH625'
            keyAlias 'H625'
            keyPassword 'HSAEH625'
        }*/
    }

    productFlavors {
        androiddemo1 { // 通用版本
            dimension 'androiddemo1'
            applicationId globalConfiguration.getAt("androidApplicationId")
            versionName globalConfiguration.getAt("androidVersionName")
            resValue "string", "app_name", globalConfiguration.getAt("androidAppName")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            resValue "string", "app_name", globalConfiguration.getAt("androidAppName") + "debug"
            signingConfig signingConfigs.releaseConfig
            //applicationIdSuffix '.debug' //在debug版本中，将会在程序的原包名上加上.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            project.gradle.startParameter.excludedTaskNames.add('lint')  // 屏蔽lint耗时检查
            buildConfigField "String", "BUILE_TIME", "\"${String.format('%s', new Date().format("yyyyMMddHHmm"))}\""
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            buildConfigField "String", "BUILE_TIME", "\"${String.format('%s', new Date().format("yyyyMMddHHmm"))}\""
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == 'release') {
                SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss")
                Date curDate = new Date(System.currentTimeMillis())
                String currentVersionName = "androidVersionName"
                outputFileName = productFlavors[0].name + "-app-" + globalConfiguration.getAt(currentVersionName) + "-" + formatter.format(curDate) + ".apk"
            }
        }
    }

    packagingOptions {
        exclude "lib/armeabi/librealm-jni.so"
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        pickFirst 'lib/arm64-v8a/libavcodec.so'
        pickFirst 'lib/arm64-v8a/libavdevice.so'
        pickFirst 'lib/arm64-v8a/libavfilter.so'
        pickFirst 'lib/arm64-v8a/libavformat.so'
        pickFirst 'lib/arm64-v8a/libavutil.so'
        pickFirst 'lib/arm64-v8a/libpostproc.so'
        pickFirst 'lib/arm64-v8a/libswresample.so'
        pickFirst 'lib/arm64-v8a/libswscale.so'

        pickFirst 'lib/armeabi-v7a/libavcodec.so'
        pickFirst 'lib/armeabi-v7a/libavdevice.so'
        pickFirst 'lib/armeabi-v7a/libavfilter.so'
        pickFirst 'lib/armeabi-v7a/libavformat.so'
        pickFirst 'lib/armeabi-v7a/libavutil.so'
        pickFirst 'lib/armeabi-v7a/libpostproc.so'
        pickFirst 'lib/armeabi-v7a/libswresample.so'
        pickFirst 'lib/armeabi-v7a/libswscale.so'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation project(path: ':loading')
    def presentationDependencies = rootProject.ext.presentationDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies
    implementation fileTree(dir: 'libs', include: ['*.jar', "*.aar"])
    implementation presentationDependencies.appcompat
    implementation presentationDependencies.androidxLegacy
    implementation presentationDependencies.androidxRecyclerview
    implementation presentationDependencies.androidxMaterial

    implementation presentationDependencies.androidxMultidex
    implementation presentationDependencies.dagger
    implementation presentationDependencies.appcompat
    implementation presentationDependencies.constraintlayout
    annotationProcessor presentationDependencies.daggerCompiler
    implementation presentationDependencies.rxJava
    implementation presentationDependencies.rxAndroid
    compileOnly presentationDependencies.javaxAnnotation
    implementation presentationDependencies.lifecycleExtensions
    annotationProcessor presentationDependencies.lifecycleCompiler

    implementation presentationDependencies.eventbus
    implementation presentationDependencies.rxbinding
    implementation presentationDependencies.rxbindingSupport
    implementation presentationDependencies.rxbindingAppcompat
    implementation presentationDependencies.rxbindingDesign
    implementation presentationDependencies.rxbindingRecyclerview
    implementation presentationDependencies.rxlifecycle
    implementation presentationDependencies.rxlifecycleComponents
    implementation presentationDependencies.butterknife
    annotationProcessor presentationDependencies.butterknifeCompiler
    implementation presentationDependencies.meFragmentation
    implementation presentationDependencies.glide
    annotationProcessor presentationDependencies.glideCompiler
    implementation('jp.wasabeef:glide-transformations:4.3.0')
    implementation libraryDependencies.gson
    implementation libraryDependencies.guava
    testImplementation 'junit:junit:4.12'
    implementation 'com.jakewharton:disklrucache:2.0.2'
    //使用WindowInsetsControllerCompat
    implementation 'androidx.core:core:1.5.0-alpha05'
    //viewpager
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.2'

    //Development
    implementation developmentDependencies.leakCanary
    implementation project(path: ':arch') // 基础库
    implementation project(path: ':appfw') // 业务中心
    implementation project(path: ':rvhelper')   //adapter
    implementation project(path: ':pullrefreshview')    //下拉刷新

    implementation 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    //releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
}