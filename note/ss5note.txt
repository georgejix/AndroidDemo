说明
本文介绍基于Shadowsocks的解决方案。参考Shadowsocks官网。
本文所描述的操作在阿里云和AWS虚拟主机 Ubuntu 16.04.3 LTS 版本上测试通过。其他操作系统版本和环境下可能略有差异。
海外云服务器：入口
准备条件
一台境外服务器。实测阿里云海外ECS和亚马逊AWS均可以。
亚马逊AWS对新用户有1年免费试用活动，是免费翻墙的最佳选择。传送门
如果选择阿里云的话，目前有一年300 RMB不到的入门配置，也是很划算的。
在Linux上安装
安装Python：（大多Linux发行版自带了Python，可跳过）
$ sudo apt install python
安装pip：
$ sudo apt install python-pip
用pip安装Shadowsocks：
$ sudo pip install shadowsocks
配置
配置Shadowsocks服务：
$ sudo vi /etc/shadowsocks.json
如果文件不存在，则自动创建。在shadowsocks.json中设置Shadowsocks服务的参数，包括端口和密码等：
{
“server”:”0.0.0.0″,
“local_address”: “127.0.0.1”,
“local_port”:1080,
“server_port”:7777,
“password”:”mypassword”,
“timeout”:300,
“method”:”aes-256-cfb”,
“fast_open”:false
}
如果想配置多组不同的端口和密码，也是可以的：
{
“server”:”0.0.0.0″,
“local_address”:”127.0.0.1″,
“local_port”:1080,
“port_password”:{
“7777”:”password1″,
“8888”:”password2″
},
“timeout”:300,
“method”:”aes-256-cfb”,
“fast_open”:false
}
注：最近GFW似乎能识别用aes-256-cfb加密的数据包并墙掉相应的端口，这种情况下可以试试其他加密方式。客户端配置需要注意和服务器保持一致。
防火墙
阿里云和AWS都有安全组策略，不要忘记把上一步配置的端口加到安全组的公网入站规则中去。Shadowsocks用的是TCP连接，配置的时候注意下。具体操作方式参考两个平台的文档。
启动和停止Shadowsocks服务
$ ssserver -c /etc/shadowsocks.json -d start
$ ssserver -c /etc/shadowsocks.json -d stop
设置自动启动
$ sudo vi /etc/rc.local
增加一行：
ssserver -c /etc/shadowsocks.json -d start
重新启动服务器即可。


这个问题是由于在openssl1.1.0版本中，废弃了EVP_CIPHER_CTX_cleanup函数，如官网中所说：
EVP_CIPHER_CTX was made opaque in OpenSSL 1.1.0. As a result, EVP_CIPHER_CTX_reset() appeared and EVP_CIPHER_CTX_cleanup() disappeared.
解决方法:
用vim打开文件：vim /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py (该路径请根据自己的系统情况自行修改，如果不知道该文件在哪里的话，可以使用find命令查找文件位置)
跳转到52行（shadowsocks2.8.2版本，其他版本搜索一下cleanup）
进入编辑模式
将第52行libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)
改为libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)
再次搜索cleanup（全文件共2处，此处位于111行），将libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)
改为libcrypto.EVP_CIPHER_CTX_reset(self._ctx)
保存并退出
启动shadowsocks服务：service shadowsocks start 或 sslocal -c ss配置文件目录